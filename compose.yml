version: '2.2'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.22
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      # - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01 #,es02,es03
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./test/data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic
  # es02:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.22
  #   container_name: es02
  #   environment:
  #     - node.name=es02
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=es01,es03
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data02:/usr/share/elasticsearch/data
  #   networks:
  #     - elastic
  # es03:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.22
  #   container_name: es03
  #   environment:
  #     - node.name=es03
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=es01,es02
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data03:/usr/share/elasticsearch/data
  #   networks:
  #     - elastic
  kibana:
    depends_on:
      - es01
    image: docker.elastic.co/kibana/kibana:7.17.22
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
      I18N_LOCALE: 'zh-CN'
    # volumes:
    #   - ./test/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    networks:
      - elastic
  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    environment:
      - TZ=Asia/Beijing
    volumes:
      - ./test/node-red/data:/data
    ports:
      - 1880:1880
    networks:
      - elastic
  nocobase:
    image: nocobase/nocobase:latest
    container_name: nocobase
    environment:
      # 应用的密钥，用于生成用户 token 等
      # 如果 APP_KEY 修改了，旧的 token 也会随之失效
      # 可以是任意随机字符串，并确保不对外泄露
      - APP_KEY=aux-acmes
      - APP_PUBLIC_PATH=/nocobase/
      # - DB_DIALECT=sqlite
      - DB_DATABASE=nocobase
      - DB_DIALECT=/nocobase/
      - DB_DIALECT=/nocobase/
    volumes:
      - ./test/nocobase/storage:/app/nocobase/storage
    ports:
      - 13000:80
    networks:
      - elastic
volumes:
  data01:
    driver: local
  # data02:
  #   driver: local
  # data03:
  #   driver: local

networks:
  elastic:
    driver: bridge
